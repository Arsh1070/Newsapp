{"ast":null,"code":"var _jsxFileName = \"/Users/arshbrar/ALL-FILES/Newsapp/frontend/src/Components/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Register.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from \"../Errors/ErrorMes\";\nimport Loading from \"../Errors/Loading\";\nimport SuccessfulMessage from \"../SuccessfulMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repassWord, setRepassWord] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [successfulMessage, setSuccessfulMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const register = async e => {\n    e.preventDefault();\n\n    if (password !== repassWord) {\n      setMessage(\"Passwords Do not Match!\");\n    } else {\n      setMessage(null);\n\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        };\n        setLoading(true);\n        const {\n          data\n        } = await axios.post(\"http://localhost:8000/register\", {\n          name,\n          email,\n          password\n        }, config);\n        console.log(data);\n        setSuccessfulMessage(data.message);\n        setLoading(false);\n      } catch (error) {\n        setError(error.response.data.message);\n        setLoading(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_reg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reg_items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"headReg\",\n            children: \"Registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [successfulMessage && /*#__PURE__*/_jsxDEV(SuccessfulMessage, {\n            children: successfulMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), message && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            placeholder: \"Enter your name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            placeholder: \"Enter your email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            placeholder: \"Enter your password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"repassWord\",\n            value: repassWord,\n            placeholder: \"Re-enter your password\",\n            onChange: e => setRepassWord(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reg_button\",\n            onClick: register,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg_login\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Existing User ? Login here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"MGILVwyTmuOZdh57XeLmRqQJSb8=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/arshbrar/ALL-FILES/Newsapp/frontend/src/Components/Register/Register.js"],"names":["React","useState","axios","Link","ErrorMessage","Loading","SuccessfulMessage","Register","name","setName","email","setEmail","password","setPassword","repassWord","setRepassWord","message","setMessage","successfulMessage","setSuccessfulMessage","error","setError","loading","setLoading","register","e","preventDefault","config","headers","data","post","console","log","response","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,iBAAD,EAAoBC,oBAApB,IAA4ClB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMuB,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAId,QAAQ,KAAKE,UAAjB,EAA6B;AAC3BG,MAAAA,UAAU,CAAC,yBAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAMU,MAAM,GAAG;AACbC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AADI,SAAf;AAKAL,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAM;AAAEM,UAAAA;AAAF,YAAW,MAAM3B,KAAK,CAAC4B,IAAN,CACrB,gCADqB,EAErB;AACEtB,UAAAA,IADF;AAEEE,UAAAA,KAFF;AAGEE,UAAAA;AAHF,SAFqB,EAOrBe,MAPqB,CAAvB;AASAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAV,QAAAA,oBAAoB,CAACU,IAAI,CAACb,OAAN,CAApB;AACAO,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAnBD,CAmBE,OAAOH,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAK,CAACa,QAAN,CAAeJ,IAAf,CAAoBb,OAArB,CAAR;AACAO,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;AACF,GA9BD;;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,qBACGL,iBAAiB,iBAChB,QAAC,iBAAD;AAAA,sBAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIGF,OAAO,iBAAI,QAAC,YAAD;AAAA,sBAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,kBAJd,EAKGI,KAAK,iBAAI,QAAC,YAAD;AAAA,sBAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,kBALZ,EAMGE,OAAO,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBANd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAYE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAEd,IAHT;AAIE,YAAA,WAAW,EAAC,iBAJd;AAKE,YAAA,QAAQ,EAAGiB,CAAD,IAAOhB,OAAO,CAACgB,CAAC,CAACS,MAAF,CAASC,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA,kBARF,eAUE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAEzB,KAHT;AAIE,YAAA,WAAW,EAAC,kBAJd;AAKE,YAAA,QAAQ,EAAGe,CAAD,IAAOd,QAAQ,CAACc,CAAC,CAACS,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAVF,eAiBE;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAkBE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAEvB,QAHT;AAIE,YAAA,WAAW,EAAC,qBAJd;AAKE,YAAA,QAAQ,EAAGa,CAAD,IAAOZ,WAAW,CAACY,CAAC,CAACS,MAAF,CAASC,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAyBE;AAAA;AAAA;AAAA;AAAA,kBAzBF,eA0BE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,YAFP;AAGE,YAAA,KAAK,EAAErB,UAHT;AAIE,YAAA,WAAW,EAAC,wBAJd;AAKE,YAAA,QAAQ,EAAGW,CAAD,IAAOV,aAAa,CAACU,CAAC,CAACS,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,kBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eA8CE;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAA+B,YAAA,OAAO,EAAEX,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA9CF,eAmDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDF,eAoDE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD,CAxGD;;GAAMjB,Q;;KAAAA,Q;AA0GN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Register.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from \"../Errors/ErrorMes\";\nimport Loading from \"../Errors/Loading\";\nimport SuccessfulMessage from \"../SuccessfulMessage\";\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repassWord, setRepassWord] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [successfulMessage, setSuccessfulMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const register = async (e) => {\n    e.preventDefault();\n    if (password !== repassWord) {\n      setMessage(\"Passwords Do not Match!\");\n    } else {\n      setMessage(null);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        setLoading(true);\n        const { data } = await axios.post(\n          \"http://localhost:8000/register\",\n          {\n            name,\n            email,\n            password,\n          },\n          config\n        );\n        console.log(data);\n        setSuccessfulMessage(data.message);\n        setLoading(false);\n      } catch (error) {\n        setError(error.response.data.message);\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"main_reg\">\n      <div className=\"reg_container\">\n        <div className=\"reg_items\">\n          <div>\n            <h2 className=\"headReg\">Registration</h2>\n          </div>\n          <div>\n            {successfulMessage && (\n              <SuccessfulMessage>{successfulMessage}</SuccessfulMessage>\n            )}\n            {message && <ErrorMessage>{message}</ErrorMessage>}\n            {error && <ErrorMessage>{error}</ErrorMessage>}\n            {loading && <Loading />}\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter your name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n            <br />\n\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter your email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <br />\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              placeholder=\"Enter your password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <br />\n            <input\n              type=\"password\"\n              name=\"repassWord\"\n              value={repassWord}\n              placeholder=\"Re-enter your password\"\n              onChange={(e) => setRepassWord(e.target.value)}\n            />\n          </div>\n          <div>\n            <button className=\"reg_button\" onClick={register}>\n              Register\n            </button>\n          </div>\n          <div>or</div>\n          <div className=\"reg_login\">\n            <Link to=\"/login\">Existing User ? Login here</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}